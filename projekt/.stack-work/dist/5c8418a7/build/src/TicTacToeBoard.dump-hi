
==================== FINAL INTERFACE ====================
2018-01-26 10:28:53.6918698 UTC

interface projekt-0.1.0.0-L2R9sX9EbLN31CCNRW6qUq:TicTacToeBoard 8022
  interface hash: d1b5e684fd5cacd7ee1f0c01540aff30
  ABI hash: f39394c8a70bd62fdb5d6c35529b0953
  export-list hash: 2558faf72ae1040865447d64988b96e5
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 73bbfb07a2cc198332f47c5c19438df4
  sig of: Nothing
  used TH splices: False
  where
exports:
  TicTacToeBoard.boardToString
  TicTacToeBoard.convertFieldToString
  TicTacToeBoard.eliminate
  TicTacToeBoard.eliminate2
  TicTacToeBoard.help
module dependencies: TicTacToeEngine
package dependencies: array-0.5.2.0* base-4.10.1.0*
                      ghc-prim-0.5.1.1 integer-gmp-1.0.1.0
orphans: base-4.10.1.0:GHC.Float base-4.10.1.0:GHC.Base
family instance modules: base-4.10.1.0:Control.Applicative
                         base-4.10.1.0:Data.Either base-4.10.1.0:Data.Functor.Const
                         base-4.10.1.0:Data.Functor.Identity base-4.10.1.0:Data.Monoid
                         base-4.10.1.0:Data.Type.Equality base-4.10.1.0:GHC.Generics
                         base-4.10.1.0:GHC.IO.Exception base-4.10.1.0:GHC.TypeLits
                         base-4.10.1.0:GHC.TypeNats
import  -/  array-0.5.2.0:Data.Array 869b69aac66df5e34601dac3d3170393
import  -/  base-4.10.1.0:GHC.Arr 80cd02c1e00d7b9b0ac8f460e89b2871
import  -/  base-4.10.1.0:GHC.Base 8f949d675e49677c272f02ab7a85fe18
import  -/  base-4.10.1.0:Prelude a93a9400cc0c816c2ee5f39399baa7a0
import  -/  TicTacToeEngine 909995f5ec0e675aac39c47c1257f0ab
  exports: 4037410c300a2034b44b1bf9e446b1c0
  Board cdc9ca8fe3ce0d0e3d76e1f010a45a4e
  Circle e953e5093748c5b431ad2d73946ffd08
  Cross 4858f5bda1812586d560b49c2e116b15
  Empty 9b71454ee1387f9f2b4e66f41a193bff
  Field d4917fad7dd87b3d2ead74ed280a312b
  newBoard afb260cff6bef405b7acb4bd7e548a11
e051d09f06ed170e7b8bfca9e95b0b9e
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   TicTacToeBoard.$trModule3
                   TicTacToeBoard.$trModule1) -}
d4613dd34f59c74eea3a2d5f29e0ace9
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS TicTacToeBoard.$trModule2) -}
83a4a3ce1e4c3b1e908e449aa2715fd4
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("TicTacToeBoard"#) -}
af89f8f996e20cc0e1c9901fb2e39db9
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS TicTacToeBoard.$trModule4) -}
5a9dbecee688b581a876ff45d0db1926
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("projekt-0.1.0.0-L2R9sX9EbLN31CCNRW6qUq"#) -}
c5a51d610b9c455e0417b8b5b6ae11e3
  boardToString :: TicTacToeEngine.Board -> GHC.Base.String
  {- Arity: 1,
     Strictness: <L,1*U(U(1*U(U),1*U(U)),U(1*U(U),1*U(U)),A,U)> -}
5bcfaa7870c046bab7ed8f8f8f533222
  convertFieldToString :: TicTacToeEngine.Field -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: TicTacToeEngine.Field) ->
                 case ds of wild {
                   TicTacToeEngine.Empty -> TicTacToeBoard.convertFieldToString5
                   TicTacToeEngine.Cross -> TicTacToeBoard.convertFieldToString3
                   TicTacToeEngine.Circle
                   -> TicTacToeBoard.convertFieldToString1 }) -}
a10a229f0f2e07b84260d0b5d3a106b2
  convertFieldToString1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   TicTacToeBoard.convertFieldToString2) -}
efe63c8adba589416215642c7a77ddb0
  convertFieldToString2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("O"#) -}
ebd9d20d41fbdf3bef85bc25445bd2a7
  convertFieldToString3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   TicTacToeBoard.convertFieldToString4) -}
fba8bdcec14034f9e2158da78ee6f5e7
  convertFieldToString4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("X"#) -}
e9235025981e6e9b0e7b709a8077dda9
  convertFieldToString5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   TicTacToeBoard.convertFieldToString6) -}
91df676b77e520ca82a8b766bb2f0c08
  convertFieldToString6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: (" "#) -}
a3295d78e8a6909c3fbedce24aec9b83
  eliminate ::
    GHC.Base.Maybe TicTacToeEngine.Board -> TicTacToeEngine.Board
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: GHC.Base.Maybe TicTacToeEngine.Board) ->
                 case ds of wild {
                   GHC.Base.Nothing -> TicTacToeEngine.newBoard
                   GHC.Base.Just a -> a }) -}
deb60a3826ca5a414e7d5d1fee5379e3
  eliminate1 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 1#) -}
73c250b5fd1571687cf349b1a4481884
  eliminate2 :: GHC.Base.Maybe GHC.Types.Int -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: GHC.Base.Maybe GHC.Types.Int) ->
                 case ds of wild {
                   GHC.Base.Nothing -> TicTacToeBoard.eliminate1
                   GHC.Base.Just a -> a }) -}
86fa073b9fb393bd7f1adf9919b0063e
  help :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# TicTacToeBoard.help1) -}
ff11a2a4c0ecd0a09a43092a7e6c13d3
  help1 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: (",,,,,,,\n\
                 \|0|1|2|\n\
                 \|3|4|5|\n\
                 \|6|7|8|\n\
                 \'''''''"#) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

