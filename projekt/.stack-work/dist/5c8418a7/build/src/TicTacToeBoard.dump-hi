
==================== FINAL INTERFACE ====================
2018-01-26 17:51:37.4398277 UTC

interface projekt-0.1.0.0-TBLQXoa90l5P6smpEMzVF:TicTacToeBoard 8022
  interface hash: 07f5133ef18dc2c99f9292501087b462
  ABI hash: 7f780aaf89cb8f8eec8f281f032ea495
  export-list hash: 83abab9126a137815eb2f96fa8e45ff8
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 73bbfb07a2cc198332f47c5c19438df4
  sig of: Nothing
  used TH splices: False
  where
exports:
  TicTacToeBoard.boardToString
  TicTacToeBoard.convertFieldToString
  TicTacToeBoard.eliminate
  TicTacToeBoard.eliminate2
  TicTacToeBoard.help
module dependencies: TicTacToeEngine
package dependencies: array-0.5.2.0* base-4.10.1.0*
                      ghc-prim-0.5.1.1 integer-gmp-1.0.1.0
orphans: base-4.10.1.0:GHC.Float base-4.10.1.0:GHC.Base
family instance modules: base-4.10.1.0:Control.Applicative
                         base-4.10.1.0:Data.Either base-4.10.1.0:Data.Functor.Const
                         base-4.10.1.0:Data.Functor.Identity base-4.10.1.0:Data.Monoid
                         base-4.10.1.0:Data.Type.Equality base-4.10.1.0:GHC.Generics
                         base-4.10.1.0:GHC.IO.Exception base-4.10.1.0:GHC.TypeLits
                         base-4.10.1.0:GHC.TypeNats
import  -/  array-0.5.2.0:Data.Array 869b69aac66df5e34601dac3d3170393
import  -/  base-4.10.1.0:GHC.Arr 80cd02c1e00d7b9b0ac8f460e89b2871
import  -/  base-4.10.1.0:GHC.Base 8f949d675e49677c272f02ab7a85fe18
import  -/  base-4.10.1.0:Prelude a93a9400cc0c816c2ee5f39399baa7a0
import  -/  TicTacToeEngine 7e384c135b8536b6e1c100e6357fcedc
  exports: 4736fcbd7704db449493bcf4c159ceb6
  Board d416d5ac98acdf9badbc27153b5b0462
  Circle e04966811c3f26a8d9ae7716f5f3131f
  Cross cca4d2efcdf0e8a9fd4e7cb0c14671b4
  Empty 6eca51d05651f08e0f6415fbb770a171
  Field 4694a87e8e72d4dce31bd51757727392
  newBoard 7141a3dfe78d198cbd8dd9a218bddd8b
b4cab3b5d638f01105bbbcb58d4ef684
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   TicTacToeBoard.$trModule3
                   TicTacToeBoard.$trModule1) -}
1e66423919cb7334be2df02b267159b4
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS TicTacToeBoard.$trModule2) -}
1c14d9ff118df712a27a0adeb9ea6baf
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("TicTacToeBoard"#) -}
d3f22e5c959783509b5fd84805ce9040
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS TicTacToeBoard.$trModule4) -}
6d934e7c7f4c1660c4ed13e3d3a7dd62
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("projekt-0.1.0.0-TBLQXoa90l5P6smpEMzVF"#) -}
c6fe99e7e4e0e0823cace31de3ac8594
  boardToString :: TicTacToeEngine.Board -> GHC.Base.String
  {- Arity: 1,
     Strictness: <L,1*U(U(1*U(U),1*U(U)),U(1*U(U),1*U(U)),A,U)> -}
f17f3c8e8770e43e6beaf0f8814358bc
  convertFieldToString :: TicTacToeEngine.Field -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: TicTacToeEngine.Field) ->
                 case ds of wild {
                   TicTacToeEngine.Empty -> TicTacToeBoard.convertFieldToString5
                   TicTacToeEngine.Cross -> TicTacToeBoard.convertFieldToString3
                   TicTacToeEngine.Circle
                   -> TicTacToeBoard.convertFieldToString1 }) -}
2cca6ad035804b338ace2ce368064b7e
  convertFieldToString1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   TicTacToeBoard.convertFieldToString2) -}
504d226845e993124791445d73ec9a93
  convertFieldToString2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("O"#) -}
93df7b714ac59b0bf7f65170f1e94cae
  convertFieldToString3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   TicTacToeBoard.convertFieldToString4) -}
c9927edb0ceef7d876c203800363ccc4
  convertFieldToString4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("X"#) -}
69541b24e0ae364d279d59ada6515049
  convertFieldToString5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   TicTacToeBoard.convertFieldToString6) -}
436b1dc009d71b1d108d18c18052890e
  convertFieldToString6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: (" "#) -}
de0cf697a413a503188ee0decb7bbff1
  eliminate ::
    GHC.Base.Maybe TicTacToeEngine.Board -> TicTacToeEngine.Board
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: GHC.Base.Maybe TicTacToeEngine.Board) ->
                 case ds of wild {
                   GHC.Base.Nothing -> TicTacToeEngine.newBoard
                   GHC.Base.Just a -> a }) -}
57e74d2dc0a56e1341e96efb6f6ce0f5
  eliminate1 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 1#) -}
f2a59fadbe55b1493fee3c7e08ac7328
  eliminate2 :: GHC.Base.Maybe GHC.Types.Int -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: GHC.Base.Maybe GHC.Types.Int) ->
                 case ds of wild {
                   GHC.Base.Nothing -> TicTacToeBoard.eliminate1
                   GHC.Base.Just a -> a }) -}
be3d0917c9dedb016c3ccf475e665d57
  help :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# TicTacToeBoard.help1) -}
2f98423e4e17e0bbbd73abae679277fb
  help1 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: (",,,,,,,\n\
                 \|0|1|2|\n\
                 \|3|4|5|\n\
                 \|6|7|8|\n\
                 \'''''''"#) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

