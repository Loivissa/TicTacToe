
==================== FINAL INTERFACE ====================
2018-01-26 18:43:14.307333 UTC

interface projekt-0.1.0.0-L2R9sX9EbLN31CCNRW6qUq:TicTacToeGame 8022
  interface hash: 88ac63f798c5d3be940dfed695c75b2a
  ABI hash: 428a7e024c2931224d6bf947f965d6d2
  export-list hash: 509f35bd851c92feba5787d605c05d6d
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 73bbfb07a2cc198332f47c5c19438df4
  sig of: Nothing
  used TH splices: False
  where
exports:
  TicTacToeGame.gameLoop
  TicTacToeGame.playAGame
module dependencies: TicTacToeBoard TicTacToeEngine TicTacToePlayer
package dependencies: array-0.5.2.0* base-4.10.1.0*
                      ghc-prim-0.5.1.1 integer-gmp-1.0.1.0
orphans: base-4.10.1.0:GHC.Float base-4.10.1.0:GHC.Base
family instance modules: base-4.10.1.0:Control.Applicative
                         base-4.10.1.0:Data.Either base-4.10.1.0:Data.Functor.Const
                         base-4.10.1.0:Data.Functor.Identity base-4.10.1.0:Data.Monoid
                         base-4.10.1.0:Data.Type.Equality base-4.10.1.0:GHC.Generics
                         base-4.10.1.0:GHC.IO.Exception base-4.10.1.0:GHC.TypeLits
                         base-4.10.1.0:GHC.TypeNats
import  -/  array-0.5.2.0:Data.Array 869b69aac66df5e34601dac3d3170393
import  -/  base-4.10.1.0:GHC.Base 8f949d675e49677c272f02ab7a85fe18
import  -/  base-4.10.1.0:Prelude a93a9400cc0c816c2ee5f39399baa7a0
import  -/  base-4.10.1.0:System.IO 1fb8f1d116df69c8750950ac088a90e6
import  -/  base-4.10.1.0:Text.Read c150617dda21a009ed26981626bd21d7
import  -/  ghc-prim-0.5.1.1:GHC.Classes 64ad5910d03ab188ab9b4adef7487b1e
import  -/  ghc-prim-0.5.1.1:GHC.Types b1fd0716441595db508c1a74387bf394
import  -/  TicTacToeBoard f39394c8a70bd62fdb5d6c35529b0953
  exports: 2558faf72ae1040865447d64988b96e5
  boardToString c5a51d610b9c455e0417b8b5b6ae11e3
  convertFieldToString 5bcfaa7870c046bab7ed8f8f8f533222
  eliminate a3295d78e8a6909c3fbedce24aec9b83
  eliminate2 73c250b5fd1571687cf349b1a4481884
  help 86fa073b9fb393bd7f1adf9919b0063e
import  -/  TicTacToeEngine 909995f5ec0e675aac39c47c1257f0ab
  exports: 4037410c300a2034b44b1bf9e446b1c0
  Board cdc9ca8fe3ce0d0e3d76e1f010a45a4e
  Circle e953e5093748c5b431ad2d73946ffd08
  CircleWon e7095399db3ad01ca7d866c5aedd5ceb
  Cross 4858f5bda1812586d560b49c2e116b15
  CrossWon e571e47d45d2f589207bae4f474064da
  Field d4917fad7dd87b3d2ead74ed280a312b
  Stalemate faa6d921100ac39d91ad2b05814eafa0
  makeAMove 2482d6eced4428c06f8ecc51002d2ae4
  newBoard afb260cff6bef405b7acb4bd7e548a11
  seeGameStatus cb51075f31a12f8e4fd07d29a8e65288
import  -/  TicTacToePlayer fdecdc42082f879cc4db25c38a83dd5d
  exports: 213840aff8cd79d0a89a9138f49076bd
  lazilyDecideHowToMove 137be80db8606234a87211ae7867018f
  oneDimIndexToTwoDim a4a080d4afb1865031b0cbb1f857127c
  otherPlayersField 53a21378d97af1dc4e86d494de9fbd57
  sensiblyDecideHowToMove 1de09be89d7ce89454d80876531e9214
86e3129c6db92daeaff76fe2996a1845
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   TicTacToeGame.$trModule3
                   TicTacToeGame.$trModule1) -}
cdb1b48b586457c0e43c27d0c2bd2909
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS TicTacToeGame.$trModule2) -}
5b3bed99dffa1e4cdd0db5c4188e620a
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("TicTacToeGame"#) -}
cc80f6bf7b329aa5eeb47c617c2911e8
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS TicTacToeGame.$trModule4) -}
1b721cb12a5e973fb9bb3d21cee4a969
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("projekt-0.1.0.0-L2R9sX9EbLN31CCNRW6qUq"#) -}
437c8639ad1750e8e33170ed255b342c
  $wgameLoop ::
    GHC.Prim.Int#
    -> TicTacToeEngine.Field
    -> GHC.Types.Int
    -> TicTacToeEngine.Board
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 5,
     Strictness: <S,1*U><L,U><L,1*U(U)><L,U(U(U(U),U(U)),U(U(U),U(U)),U,U)><S,U>,
     Inline: [0] -}
3c182bd72649f46183064e6fd3bb4acb
  gameLoop ::
    GHC.Types.Int
    -> TicTacToeEngine.Field
    -> GHC.Types.Int
    -> TicTacToeEngine.Board
    -> GHC.Types.IO ()
  {- Arity: 5,
     Strictness: <S(S),1*U(1*U)><L,U><L,1*U(U)><L,U(U(U(U),U(U)),U(U(U),U(U)),U,U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                TicTacToeGame.gameLoop1
                  `cast`
                (<GHC.Types.Int>_R
                 ->_R <TicTacToeEngine.Field>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R <TicTacToeEngine.Board>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
c61afa504dc0819e948daefa45546581
  gameLoop1 ::
    GHC.Types.Int
    -> TicTacToeEngine.Field
    -> GHC.Types.Int
    -> TicTacToeEngine.Board
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 5,
     Strictness: <S(S),1*U(1*U)><L,U><L,1*U(U)><L,U(U(U(U),U(U)),U(U(U),U(U)),U,U)><S,U>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: TicTacToeEngine.Field)
                   (w2 :: GHC.Types.Int)
                   (w3 :: TicTacToeEngine.Board)
                   (w4 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 TicTacToeGame.$wgameLoop ww1 w1 w2 w3 w4 }) -}
f703d170de0831de6a911014e6c8fee3
  playAGame :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                TicTacToeGame.playAGame1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
28963d000d8969a635e397d49acf7950
  playAGame1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U> -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

