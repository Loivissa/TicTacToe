
==================== FINAL INTERFACE ====================
2018-01-26 17:51:38.0354415 UTC

interface projekt-0.1.0.0-TBLQXoa90l5P6smpEMzVF:TicTacToeGame 8022
  interface hash: e8ad5af8366f7d86d0a02e459a51808f
  ABI hash: d267579972be8bb4287daa494d8e2cae
  export-list hash: 536edda694cfc41d9003430251f39eb0
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 73bbfb07a2cc198332f47c5c19438df4
  sig of: Nothing
  used TH splices: False
  where
exports:
  TicTacToeGame.gameLoop
  TicTacToeGame.playAGame
module dependencies: TicTacToeBoard TicTacToeEngine TicTacToePlayer
package dependencies: array-0.5.2.0* base-4.10.1.0*
                      ghc-prim-0.5.1.1 integer-gmp-1.0.1.0
orphans: base-4.10.1.0:GHC.Float base-4.10.1.0:GHC.Base
family instance modules: base-4.10.1.0:Control.Applicative
                         base-4.10.1.0:Data.Either base-4.10.1.0:Data.Functor.Const
                         base-4.10.1.0:Data.Functor.Identity base-4.10.1.0:Data.Monoid
                         base-4.10.1.0:Data.Type.Equality base-4.10.1.0:GHC.Generics
                         base-4.10.1.0:GHC.IO.Exception base-4.10.1.0:GHC.TypeLits
                         base-4.10.1.0:GHC.TypeNats
import  -/  array-0.5.2.0:Data.Array 869b69aac66df5e34601dac3d3170393
import  -/  base-4.10.1.0:GHC.Base 8f949d675e49677c272f02ab7a85fe18
import  -/  base-4.10.1.0:Prelude a93a9400cc0c816c2ee5f39399baa7a0
import  -/  base-4.10.1.0:System.IO 1fb8f1d116df69c8750950ac088a90e6
import  -/  base-4.10.1.0:Text.Read c150617dda21a009ed26981626bd21d7
import  -/  ghc-prim-0.5.1.1:GHC.Classes 64ad5910d03ab188ab9b4adef7487b1e
import  -/  ghc-prim-0.5.1.1:GHC.Types b1fd0716441595db508c1a74387bf394
import  -/  TicTacToeBoard 7f780aaf89cb8f8eec8f281f032ea495
  exports: 83abab9126a137815eb2f96fa8e45ff8
  boardToString c6fe99e7e4e0e0823cace31de3ac8594
  convertFieldToString f17f3c8e8770e43e6beaf0f8814358bc
  eliminate de0cf697a413a503188ee0decb7bbff1
  eliminate2 f2a59fadbe55b1493fee3c7e08ac7328
  help be3d0917c9dedb016c3ccf475e665d57
import  -/  TicTacToeEngine 7e384c135b8536b6e1c100e6357fcedc
  exports: 4736fcbd7704db449493bcf4c159ceb6
  Board d416d5ac98acdf9badbc27153b5b0462
  Circle e04966811c3f26a8d9ae7716f5f3131f
  CircleWon 11c60d9e5f1a139b47c323347296f3fb
  Cross cca4d2efcdf0e8a9fd4e7cb0c14671b4
  CrossWon 99abb8f37456bdc8b6b151cd4e3f6868
  Field 4694a87e8e72d4dce31bd51757727392
  Stalemate 4d0ffe4c826b57cbdd105e53a8ee6ab4
  makeAMove 6110d9c4371e058444d08ef9b37ce836
  newBoard 7141a3dfe78d198cbd8dd9a218bddd8b
  seeGameStatus 5167423478462095b9c24146fddee054
import  -/  TicTacToePlayer 5dad19cd078c8f296953991a938df175
  exports: 7bba1c8eae892ff93ea8fdc333027025
  lazilyDecideHowToMove cbadbb40048f4a73cfeb95ecc54f2771
  oneDimIndexToTwoDim e446df42bf9af005c3e603f566de6fa3
  otherPlayersField c89486699bab4a0ce5cf382b23866437
  sensiblyDecideHowToMove 612b0668e0094f7a94536e813d0e4671
a9df1f30b7ece1b3875809b486d3a7c4
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   TicTacToeGame.$trModule3
                   TicTacToeGame.$trModule1) -}
91addabdf453741d298020ce2a1c6f98
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS TicTacToeGame.$trModule2) -}
9dac96e00da8b24c6918daa8d9b30528
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("TicTacToeGame"#) -}
48823e888b03f8f8b44f35d494120ea5
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS TicTacToeGame.$trModule4) -}
6f8f6e02b779b28fe0723a4c8faea07f
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("projekt-0.1.0.0-TBLQXoa90l5P6smpEMzVF"#) -}
15edcc40b0d8b9f6aaf123e09329f6ac
  $wgameLoop ::
    GHC.Prim.Int#
    -> TicTacToeEngine.Field
    -> GHC.Types.Int
    -> TicTacToeEngine.Board
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 5,
     Strictness: <S,1*U><L,U><L,1*U(U)><L,U(U(U(U),U(U)),U(U(U),U(U)),U,U)><S,U>,
     Inline: [0] -}
4a1bbd47c759335c1527302149718fbb
  gameLoop ::
    GHC.Types.Int
    -> TicTacToeEngine.Field
    -> GHC.Types.Int
    -> TicTacToeEngine.Board
    -> GHC.Types.IO ()
  {- Arity: 5,
     Strictness: <S(S),1*U(1*U)><L,U><L,1*U(U)><L,U(U(U(U),U(U)),U(U(U),U(U)),U,U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                TicTacToeGame.gameLoop1
                  `cast`
                (<GHC.Types.Int>_R
                 ->_R <TicTacToeEngine.Field>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R <TicTacToeEngine.Board>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
bde88b1ceae4163418b4bb2e1094c097
  gameLoop1 ::
    GHC.Types.Int
    -> TicTacToeEngine.Field
    -> GHC.Types.Int
    -> TicTacToeEngine.Board
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 5,
     Strictness: <S(S),1*U(1*U)><L,U><L,1*U(U)><L,U(U(U(U),U(U)),U(U(U),U(U)),U,U)><S,U>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: TicTacToeEngine.Field)
                   (w2 :: GHC.Types.Int)
                   (w3 :: TicTacToeEngine.Board)
                   (w4 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 TicTacToeGame.$wgameLoop ww1 w1 w2 w3 w4 }) -}
3127f6fd789a937319bbff00bb7aa5ba
  playAGame :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                TicTacToeGame.playAGame1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
eff85b4dbe277d8adcb8f2ef7ea4ee31
  playAGame1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U> -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

